/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> f,r;
    void rev(ListNode* head)
    {
        if(head == NULL)
        {
            return;
        }
        rev(head->next);
        r.push_back(head->val);
    }
    void forw(ListNode* head)
    {
        if(head == NULL)
        {
            return;
        }
        f.push_back(head->val);
        forw(head->next);
        
    }
    bool isPalindrome(ListNode* head) {
        rev(head);
        forw(head);
        vector<int> forward = f;
        vector<int> rev  = r;
        if(forward == rev) return true;
        return false;
    }
};
